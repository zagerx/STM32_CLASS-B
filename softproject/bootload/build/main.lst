ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Error_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	Error_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Error_Handler:
  27              	.LFB134:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2023 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** #include "crc.h"
  22:Src/main.c    **** #include "iwdg.h"
  23:Src/main.c    **** #include "rtc.h"
  24:Src/main.c    **** #include "tim.h"
  25:Src/main.c    **** #include "gpio.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN Includes */
  29:Src/main.c    **** #include "bootload.h"
  30:Src/main.c    **** /* USER CODE END Includes */
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 2


  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PTD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PD */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  43:Src/main.c    **** /* USER CODE BEGIN PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* USER CODE END PM */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN PV */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* USER CODE END PV */
  52:Src/main.c    **** 
  53:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  54:Src/main.c    **** void SystemClock_Config(void);
  55:Src/main.c    **** /* USER CODE BEGIN PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END 0 */
  63:Src/main.c    **** 
  64:Src/main.c    **** /**
  65:Src/main.c    ****   * @brief  The application entry point.
  66:Src/main.c    ****   * @retval int
  67:Src/main.c    ****   */
  68:Src/main.c    **** int main(void)
  69:Src/main.c    **** {
  70:Src/main.c    ****   /* USER CODE BEGIN 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* USER CODE END 1 */
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  75:Src/main.c    **** 
  76:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Src/main.c    ****   HAL_Init();
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE BEGIN Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* USER CODE END Init */
  82:Src/main.c    **** 
  83:Src/main.c    ****   /* Configure the system clock */
  84:Src/main.c    ****   SystemClock_Config();
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  87:Src/main.c    **** 
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 3


  88:Src/main.c    ****   /* USER CODE END SysInit */
  89:Src/main.c    **** 
  90:Src/main.c    ****   /* Initialize all configured peripherals */
  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    ****   // MX_IWDG_Init();
  93:Src/main.c    ****   /* USER CODE BEGIN 2 */
  94:Src/main.c    ****   iap_load_app();
  95:Src/main.c    ****   /* USER CODE END 2 */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* Infinite loop */
  98:Src/main.c    ****   /* USER CODE BEGIN WHILE */
  99:Src/main.c    ****   while (1)
 100:Src/main.c    ****   {
 101:Src/main.c    ****     /* USER CODE END WHILE */
 102:Src/main.c    **** 
 103:Src/main.c    ****     /* USER CODE BEGIN 3 */
 104:Src/main.c    ****   }
 105:Src/main.c    ****   /* USER CODE END 3 */
 106:Src/main.c    **** }
 107:Src/main.c    **** 
 108:Src/main.c    **** /**
 109:Src/main.c    ****   * @brief System Clock Configuration
 110:Src/main.c    ****   * @retval None
 111:Src/main.c    ****   */
 112:Src/main.c    **** void SystemClock_Config(void)
 113:Src/main.c    **** {
 114:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 115:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 116:Src/main.c    **** 
 117:Src/main.c    ****   /** Configure the main internal regulator output voltage
 118:Src/main.c    ****   */
 119:Src/main.c    ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 120:Src/main.c    **** 
 121:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 122:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 123:Src/main.c    ****   */
 124:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 125:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 126:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV3;
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 85;
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 134:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 135:Src/main.c    ****   {
 136:Src/main.c    ****     Error_Handler();
 137:Src/main.c    ****   }
 138:Src/main.c    **** 
 139:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 140:Src/main.c    ****   */
 141:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 142:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 143:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 144:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 4


 145:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 146:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147:Src/main.c    **** 
 148:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 149:Src/main.c    ****   {
 150:Src/main.c    ****     Error_Handler();
 151:Src/main.c    ****   }
 152:Src/main.c    **** }
 153:Src/main.c    **** 
 154:Src/main.c    **** /* USER CODE BEGIN 4 */
 155:Src/main.c    **** 
 156:Src/main.c    **** /* USER CODE END 4 */
 157:Src/main.c    **** 
 158:Src/main.c    **** /**
 159:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 160:Src/main.c    ****   * @retval None
 161:Src/main.c    ****   */
 162:Src/main.c    **** void Error_Handler(void)
 163:Src/main.c    **** {
  29              		.loc 1 163 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 164:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 165:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 166:Src/main.c    ****   __disable_irq();
  35              		.loc 1 166 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 5


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 6


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 7


 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 8


 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 207 27 view .LVU2
  40              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 209 3 view .LVU3
  42              		.syntax unified
  43              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 167:Src/main.c    ****   while (1)
  51              		.loc 1 167 3 discriminator 1 view .LVU4
 168:Src/main.c    ****   {
 169:Src/main.c    ****   }
  52              		.loc 1 169 3 discriminator 1 view .LVU5
 167:Src/main.c    ****   while (1)
  53              		.loc 1 167 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE134:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB133:
 113:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 113 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 95B0     		sub	sp, sp, #84
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 88
 114:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 114 3 view .LVU8
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 9


 114:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 114 22 is_stmt 0 view .LVU9
  80 0004 3822     		movs	r2, #56
  81 0006 0021     		movs	r1, #0
  82 0008 06A8     		add	r0, sp, #24
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 115:Src/main.c    **** 
  85              		.loc 1 115 3 is_stmt 1 view .LVU10
 115:Src/main.c    **** 
  86              		.loc 1 115 22 is_stmt 0 view .LVU11
  87 000e 0020     		movs	r0, #0
  88 0010 0190     		str	r0, [sp, #4]
  89 0012 0290     		str	r0, [sp, #8]
  90 0014 0390     		str	r0, [sp, #12]
  91 0016 0490     		str	r0, [sp, #16]
  92 0018 0590     		str	r0, [sp, #20]
 119:Src/main.c    **** 
  93              		.loc 1 119 3 is_stmt 1 view .LVU12
  94 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  95              	.LVL1:
 124:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  96              		.loc 1 124 3 view .LVU13
 124:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  97              		.loc 1 124 36 is_stmt 0 view .LVU14
  98 001e 0923     		movs	r3, #9
  99 0020 0693     		str	r3, [sp, #24]
 125:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 100              		.loc 1 125 3 is_stmt 1 view .LVU15
 125:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 101              		.loc 1 125 30 is_stmt 0 view .LVU16
 102 0022 4FF48033 		mov	r3, #65536
 103 0026 0793     		str	r3, [sp, #28]
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 104              		.loc 1 126 3 is_stmt 1 view .LVU17
 126:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 105              		.loc 1 126 30 is_stmt 0 view .LVU18
 106 0028 0123     		movs	r3, #1
 107 002a 0B93     		str	r3, [sp, #44]
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 108              		.loc 1 127 3 is_stmt 1 view .LVU19
 127:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 109              		.loc 1 127 34 is_stmt 0 view .LVU20
 110 002c 0223     		movs	r3, #2
 111 002e 0D93     		str	r3, [sp, #52]
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV3;
 112              		.loc 1 128 3 is_stmt 1 view .LVU21
 128:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV3;
 113              		.loc 1 128 35 is_stmt 0 view .LVU22
 114 0030 0322     		movs	r2, #3
 115 0032 0E92     		str	r2, [sp, #56]
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 85;
 116              		.loc 1 129 3 is_stmt 1 view .LVU23
 129:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 85;
 117              		.loc 1 129 30 is_stmt 0 view .LVU24
 118 0034 0F92     		str	r2, [sp, #60]
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 10


 119              		.loc 1 130 3 is_stmt 1 view .LVU25
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 120              		.loc 1 130 30 is_stmt 0 view .LVU26
 121 0036 5522     		movs	r2, #85
 122 0038 1092     		str	r2, [sp, #64]
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 123              		.loc 1 131 3 is_stmt 1 view .LVU27
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 124              		.loc 1 131 30 is_stmt 0 view .LVU28
 125 003a 1193     		str	r3, [sp, #68]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 126              		.loc 1 132 3 is_stmt 1 view .LVU29
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 127              		.loc 1 132 30 is_stmt 0 view .LVU30
 128 003c 1293     		str	r3, [sp, #72]
 133:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129              		.loc 1 133 3 is_stmt 1 view .LVU31
 133:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 130              		.loc 1 133 30 is_stmt 0 view .LVU32
 131 003e 1393     		str	r3, [sp, #76]
 134:Src/main.c    ****   {
 132              		.loc 1 134 3 is_stmt 1 view .LVU33
 134:Src/main.c    ****   {
 133              		.loc 1 134 7 is_stmt 0 view .LVU34
 134 0040 06A8     		add	r0, sp, #24
 135 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 136              	.LVL2:
 134:Src/main.c    ****   {
 137              		.loc 1 134 6 view .LVU35
 138 0046 80B9     		cbnz	r0, .L7
 141:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139              		.loc 1 141 3 is_stmt 1 view .LVU36
 141:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 140              		.loc 1 141 31 is_stmt 0 view .LVU37
 141 0048 0F23     		movs	r3, #15
 142 004a 0193     		str	r3, [sp, #4]
 143:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143              		.loc 1 143 3 is_stmt 1 view .LVU38
 143:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 144              		.loc 1 143 34 is_stmt 0 view .LVU39
 145 004c 0323     		movs	r3, #3
 146 004e 0293     		str	r3, [sp, #8]
 144:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 147              		.loc 1 144 3 is_stmt 1 view .LVU40
 144:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 148              		.loc 1 144 35 is_stmt 0 view .LVU41
 149 0050 0023     		movs	r3, #0
 150 0052 0393     		str	r3, [sp, #12]
 145:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151              		.loc 1 145 3 is_stmt 1 view .LVU42
 145:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 152              		.loc 1 145 36 is_stmt 0 view .LVU43
 153 0054 0493     		str	r3, [sp, #16]
 146:Src/main.c    **** 
 154              		.loc 1 146 3 is_stmt 1 view .LVU44
 146:Src/main.c    **** 
 155              		.loc 1 146 36 is_stmt 0 view .LVU45
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 11


 156 0056 0593     		str	r3, [sp, #20]
 148:Src/main.c    ****   {
 157              		.loc 1 148 3 is_stmt 1 view .LVU46
 148:Src/main.c    ****   {
 158              		.loc 1 148 7 is_stmt 0 view .LVU47
 159 0058 0421     		movs	r1, #4
 160 005a 0DEB0100 		add	r0, sp, r1
 161 005e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 162              	.LVL3:
 148:Src/main.c    ****   {
 163              		.loc 1 148 6 view .LVU48
 164 0062 20B9     		cbnz	r0, .L8
 152:Src/main.c    **** 
 165              		.loc 1 152 1 view .LVU49
 166 0064 15B0     		add	sp, sp, #84
 167              	.LCFI2:
 168              		.cfi_remember_state
 169              		.cfi_def_cfa_offset 4
 170              		@ sp needed
 171 0066 5DF804FB 		ldr	pc, [sp], #4
 172              	.L7:
 173              	.LCFI3:
 174              		.cfi_restore_state
 136:Src/main.c    ****   }
 175              		.loc 1 136 5 is_stmt 1 view .LVU50
 176 006a FFF7FEFF 		bl	Error_Handler
 177              	.LVL4:
 178              	.L8:
 150:Src/main.c    ****   }
 179              		.loc 1 150 5 view .LVU51
 180 006e FFF7FEFF 		bl	Error_Handler
 181              	.LVL5:
 182              		.cfi_endproc
 183              	.LFE133:
 185              		.section	.text.main,"ax",%progbits
 186              		.align	1
 187              		.global	main
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	main:
 193              	.LFB132:
  69:Src/main.c    ****   /* USER CODE BEGIN 1 */
 194              		.loc 1 69 1 view -0
 195              		.cfi_startproc
 196              		@ Volatile: function does not return.
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199 0000 08B5     		push	{r3, lr}
 200              	.LCFI4:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 3, -8
 203              		.cfi_offset 14, -4
  77:Src/main.c    **** 
 204              		.loc 1 77 3 view .LVU53
 205 0002 FFF7FEFF 		bl	HAL_Init
 206              	.LVL6:
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 12


  84:Src/main.c    **** 
 207              		.loc 1 84 3 view .LVU54
 208 0006 FFF7FEFF 		bl	SystemClock_Config
 209              	.LVL7:
  91:Src/main.c    ****   // MX_IWDG_Init();
 210              		.loc 1 91 3 view .LVU55
 211 000a FFF7FEFF 		bl	MX_GPIO_Init
 212              	.LVL8:
  94:Src/main.c    ****   /* USER CODE END 2 */
 213              		.loc 1 94 3 view .LVU56
 214 000e FFF7FEFF 		bl	iap_load_app
 215              	.LVL9:
 216              	.L10:
  99:Src/main.c    ****   {
 217              		.loc 1 99 3 discriminator 1 view .LVU57
 104:Src/main.c    ****   /* USER CODE END 3 */
 218              		.loc 1 104 3 discriminator 1 view .LVU58
  99:Src/main.c    ****   {
 219              		.loc 1 99 9 discriminator 1 view .LVU59
 220 0012 FEE7     		b	.L10
 221              		.cfi_endproc
 222              	.LFE132:
 224              		.text
 225              	.Letext0:
 226              		.file 3 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_defa
 227              		.file 4 "d:\\program files\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h
 228              		.file 5 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 229              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 230              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 231              		.file 8 "Inc/gpio.h"
 232              		.file 9 "bootload/bootload.h"
 233              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 234              		.file 11 "<built-in>"
ARM GAS  C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s:20     .text.Error_Handler:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s:26     .text.Error_Handler:00000000 Error_Handler
C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s:59     .text.SystemClock_Config:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s:65     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s:186    .text.main:00000000 $t
C:\Users\zhangge\AppData\Local\Temp\ccg6rcHj.s:192    .text.main:00000000 main

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
iap_load_app
